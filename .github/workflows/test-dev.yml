# This is a basic workflow to help you get started with Actions

name: Automated Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches:
      - '!main'
      - '*'
  pull_request:
    branches:
      - 'develop'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
          
  unittests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate Coverage Report
        run: |
          npm ci
          npm test -- --coverage
        env:
          CI: true
     
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          #file: ./coverage/lcov-report # optional
          #files: ./coverage1.xml,./coverage2.xml # optional
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ESLint
        run: |
          # Install eslint and plugins
          npm i \
          eslint \
          eslint-config-react-app \
          eslint-import-resolver-node \
          eslint-loader \
          eslint-module-utils \
          eslint-plugin-flowtype \
          eslint-plugin-import \
          eslint-plugin=jsx-a11y \
          eslint-plugin-react \
          eslint-plugin-react-hooks \
          eslint-scope \
          eslint-utils \
          eslint-visitor-keys
          
          npx eslint ./src --ext .tsx
          
          # get changed files
          #FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)
          #for file in ${FILES[@]}; do
          #  npx eslint $file
          #done
        env:
          CI: true
